version: "3.9"

services:
  gateway:
    build:
      dockerfile: Dockerfile-gateway
      target: gateway
    ports:
      - "8080:8080"
  transact:
    build:
      dockerfile: Dockerfile-transact
      target: transact
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: transact_development
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate:v4.15.2
    profiles: [ "tools" ]
    volumes:
      - ./db/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@db:5432/transact_development?sslmode=disable",
      ]
    command: [ "up" ]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
  redis:
    restart: always
    image: redis:latest
    healthcheck:
      test: [ "CMD","redis-cli","ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
  converter:
    build:
      dockerfile: Dockerfile-converter
      target: converter
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data: